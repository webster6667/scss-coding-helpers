@use "sass:map";

/// Show element from fade-out, and add transition style for fade-in after fade-out
///
/// @group animation
/// @name fade-in
///
/// @param {map} $settings [(animation-duration: .5, additional-transition-values: '')] - mixin settings
///
/// @example
/// .player {
///   position: relative;
///   height: 200px;
///   background:silver;
///
///   .button {
///     position: absolute;
///     left: 50%;
///     top: 50%;
///
///     width: 30px;
///     height: 30px;
///     transform: translate(-50%, -50%);
///
///     border-radius: 4px;
///     background-color: black;
///   }
///
///   //button fade-in
///   &_with-fade-in-btn {
///
///     .button {
///       @include fade-out();
///     }
///
///     &:hover .button {
///       @include fade-in();
///     }
///
///   }
///
///   //button fade-out
///   &_with-fade-out-btn {
///
///     .button {
///       @include fade-in();
///     }
///
///     &:hover .button {
///       @include fade-out();
///     }
///
///   }
///
///   //button fade-in with rotate
///   &_with-fade-in-rotate-btn {
///     $map-with-additional-transition: (additional-transition-values: transform .5s 0s ease);
///
///     .button {
///       transform: rotate(45deg);
///       @include fade-out($map-with-additional-transition);
///     }
///
///     &:hover .button {
///
///       transform: rotate(0deg);
///       @include fade-in($map-with-additional-transition);
///     }
///
///   }
///
/// }
///
/// //class with mod
/// <!--player_with-fade-in-btn-->
/// <!--player_with-fade-out-btn-->
/// <!--player_with-fade-in-rotate-btn-->
///
/// <div class="player player_with-fade-in-btn" >
///   <div class="button" ></div>
/// </div>
@mixin fade-in($settings: (animation-duration: .5, additional-transition-values: '')) {
  $additional-transition-values: get-map-prop-or-default($settings, additional-transition-values);
  $fade-in-duration: get-map-prop-or-default($settings, animation-duration, .5);

  opacity: 1;
  visibility: visible;

  @if($additional-transition-values == '') {
    transition: opacity #{$fade-in-duration}s ease;
  }

  @else {
    transition: opacity #{$fade-in-duration}s ease, $additional-transition-values;
  }

}

/// Hide element to opacity: 0, and hide element before fade-in
///
/// @group animation
/// @name fade-out
///
/// @param {map} $settings [(animation-duration: .5, additional-transition-values: '')] - mixin settings
///
/// @example
/// .modal-trigger {
///   height: 20px;
///
///   text-align: center;
///
///   background-color: silver;
/// }
///
/// .modal {
///   position: fixed;
///   top: 40px;
///   right: 0;
///   bottom: 0;
///   left: 0;
///
///   background-color: rgba(0,0,0,.5);
///
///   $map-with-additional-transition: (additional-transition-values: transform .5s 0s ease);
///
///   //modal-state-for-open
///   &_for-open {
///     @include fade-out();
///   }
///
///   //modal-state-for-closed
///   &_for-closed {
///     @include fade-in();
///   }
///
///   //modal-state-for-open-with-rotate
///   &_for-open-with-rotate {
///     transform: skewX(100deg);
///     @include fade-out($map-with-additional-transition);
///   }
///
///   //modal fade-in
///   &_open {
///     @include fade-in();
///   }
///
///   &_open-with-rotate {
///     @include fade-in();
///   }
///
///   //modal fade-out
///   &_closed {
///     @include fade-out();
///   }
///
///   //modal fade-in with rotate
///   &_open-with-rotate {
///     transform: skewX(0deg);
///     @include fade-in($map-with-additional-transition);
///   }
///
/// }
///
/// //class with mod
/// <!--modal_for-open, inJs: modal_open-->
/// <!--modal_for-close, inJs: modal_close-->
/// <!--modal_for-open-with-rotate, inJs: modal_open-with-rotate-->
///
/// <div class="modal modal_for-open" ></div>
/// <div class="modal-trigger" onclick="document.querySelector('.modal').classList.toggle('modal_open')">open/close</div>
@mixin fade-out($settings: (animation-duration: .5, additional-transition-values: '')) {
  $additional-transition-values: get-map-prop-or-default($settings, additional-transition-values);
  $animation-duration: get-map-prop-or-default($settings, animation-duration, .5);

  $fade-out-duration: $animation-duration;
  $visibility-hidden-delay: $animation-duration;

  opacity: 0;
  visibility: hidden;

  @if($additional-transition-values == '') {
    transition: opacity #{$fade-out-duration}s ease, visibility 0s #{$visibility-hidden-delay}s linear;
  }

  @else {
    transition: opacity #{$fade-out-duration}s ease, visibility 0s #{$visibility-hidden-delay}s linear, $additional-transition-values;
  }

}

